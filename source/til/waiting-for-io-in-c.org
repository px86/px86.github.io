#+TITLE: Waiting for I/O in C
#+SUBTITLE: the 'select' function
#+AUTHOR: Pushkar Raj
#+EMAIL: px86@protonmail.com
#+DATE: [2023-04-30 Sun]

The =select= function can be used to implement an input method where the function call blocks until data is available or until the time expires, whichever comes first.

https://www.gnu.org/software/libc/manual/html_node/Waiting-for-I_002fO.html

#+begin_src c
  #include <errno.h>
  #include <stdio.h>
  #include <sys/time.h>
  #include <sys/types.h>
  #include <unistd.h>

  int input_timeout(int filedes, unsigned int seconds) {
    fd_set set;
    struct timeval timeout;

    /* Initialize the file descriptor set. */
    FD_ZERO(&set);
    FD_SET(filedes, &set);

    /* Initialize the timeout data structure. */
    timeout.tv_sec = seconds;
    timeout.tv_usec = 0;

    /* select returns 0 if timeout, 1 if input available, -1 if error. */
    int available;
    while ((available = select(FD_SETSIZE, &set, NULL, NULL, &timeout)) == -1) {
      if (errno != EINTR) {
        break;
      }
    }

    return available;
  }

  int main(void) {
    int available = input_timeout(STDIN_FILENO, 5);
    if (available == 1) {
      char buff[1024];
      int rcount = read(STDIN_FILENO, &buff, 1024);
      buff[--rcount] = 0;
      fprintf(stdout, "%s\n", buff);
    } else {
      fprintf(stderr, "No input provided.\n");
    }

    return 0;
  }
#+end_src

This example is taken from the =glibc= manual. They used the =TEMP_FAILURE_RETRY= macro. I was getting some errors. I will get back to it!
